// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
        Not (in=sel[0], out=notSel0);
        Not (in=sel[1], out=notSel1);
        Not (in=sel[2], out=notSel2);

        And (a=in, b=notSel0, out=aTemp1);
        And (a=aTemp1, b=notSel1, out=aTemp2);
        And (a=aTemp2, b=notSel2, out=a);

        And (a=in, b=sel[0], out=bTemp1);
        And (a=bTemp1, b=notSel1, out=bTemp2);
        And (a=bTemp2, b=notSel2, out=b);
        
        And (a=in, b=notSel0, out=cTemp1);
        And (a=cTemp1, b=sel[1], out=cTemp2);
        And (a=cTemp2, b=notSel2, out=c);

        And (a=in, b=sel[0], out=dTemp1);
        And (a=dTemp1, b=sel[1], out=dTemp2);
        And (a=dTemp2, b=notSel2, out=d);

        And (a=in, b=notSel0, out=eTemp1);
        And (a=eTemp1, b=notSel1, out=eTemp2);
        And (a=eTemp2, b=sel[2], out=e);

        And (a=in, b=sel[0], out=fTemp1);
        And (a=fTemp1, b=notSel1, out=fTemp2);
        And (a=fTemp2, b=sel[2], out=f);

        And (a=in, b=notSel0, out=gTemp1);
        And (a=gTemp1, b=sel[1], out=gTemp2);
        And (a=gTemp2, b=sel[2], out=g);

        And (a=in, b=sel[0], out=hTemp1);
        And (a=hTemp1, b=sel[1], out=hTemp2);
        And (a=hTemp2, b=sel[2], out=h);
}