// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
        DMux8Way16 (in=in, sel=address[0..2], a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);
        DMux8Way (in=load, sel=address[0..2], a=loadA, b=loadB, c=loadC, d=loadD, e=loadE,
                  f=loadF, g=loadG, h=loadH);
        RAM512 (in=a, load=loadA, address=address[3..11], out=aRAM);
        RAM512 (in=b, load=loadB, address=address[3..11], out=bRAM);
        RAM512 (in=c, load=loadC, address=address[3..11], out=cRAM);
        RAM512 (in=d, load=loadD, address=address[3..11], out=dRAM);
        RAM512 (in=e, load=loadE, address=address[3..11], out=eRAM);
        RAM512 (in=f, load=loadF, address=address[3..11], out=fRAM);
        RAM512 (in=g, load=loadG, address=address[3..11], out=gRAM);
        RAM512 (in=h, load=loadH, address=address[3..11], out=hRAM);
        Mux8Way16 (a=aRAM, b=bRAM, c=cRAM, d=dRAM, e=eRAM,
                   f=fRAM, g=gRAM, h=hRAM, sel=address[0..2], out=out);
}
